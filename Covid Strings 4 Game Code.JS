doc.type html
html lang en 
script
header=document create.element(header)
header.style.backgroundcolor=#4caf50
header.style.color=’white’
header.style.padding=’10px’
header.style.textalign=’center’
header.style.text.fontsize=’24px’
header.textcontent=’welcome to covid strings4’
document appendchild(header)
<header.html>
heading variables 
the heading numbers that determine where each heading and subheading go 
heading1=game code overview
heading2=background functions
heading3=game code part1
heading4=phrases
heading5=multiple choice problems
heading6=math problems
heading7=sentences
heading8=game code part2 
heading9=answer checker
heading10=winner checker
subheading1=polling questions
subheading2=bonus questions
subheading3=answer scanner
filename=covid strings4 .js
<header.html>
game code overview
an outline of the game code for covid strings4
java.awt graphics 
img=document.createelement(covid)
img.src=http://www.google.com/intl/en_com/images/logo_plain.png
src=document getelementbyid(header)
src.appendchild(this.img)
div id=header div
audio=new audio (audio_file mp3)
audio.play 
random button
new button (set random color)
option button
new button (change color)
public fun with graphics()
color panel=new j panel();
add (panel,center )
button panel
new panel (flowlayout.center)
buttonpanel.add(randombutton);
random.button add actionlistener(new action listener)
public actionperformed(actionevent e)
random r= newrandom();
<header.html>
background functions
the functions that lead into the background that are the first things the user will experience
colorpanel.setbackground(rnextint(thirteen),)(rnextint(thirteen),)(rnextint(thirteen),)(rnextint(thirteen),)(rnextint(thirteen),)(rnextint(thirteen),)(rnextint(thirteen),)(rnextint(thirteen)))(rnextint(thirteen)))(rnextint(thirteen)))(rnextint(thirteen)))(rnextint(thirteen)))
num teams
total players=players per team
if players per team=zero
return zero
else 
return math floor total players/players per team
teamsgrouping=(rnextint8)(rnextint8)(rnextint8)(rnextint8)(rnextint8)(rnextint8)(rnextint8)
buttonpanel.add(optionbutton);
optionbutton.add actionlistener(new action listener)
override 
<header.html>
game code part 1
part 1 of game code for covid strings4(value object[team-color]-desired color green)
public actionperformed(actionevent e)
color m=jcolorchooser.showdialog(funwithgraphics.this)
if(multi!=null)
color panel set.background(multi)
this.add(buttonpanel, borderlayout.south)
public static main(string [] args)
jframe f = new covid strings(4)
f.set title(covid strings4)
f.set default closeoperation(exit_on_close);
f.setsize
f.set visible(true);
<label id=lblscore>zero</label>
score=zero
if (mult == x*y)
[non-concatenated]
score+=ten
else:
score-=ten
if (mult == x*y)
[concatenated]
score+=twenty
else:
score-=twenty
lblscore=document.getelementbyid(lblscore)
lbl.score.inner html=score
private j button next button=new jbutton(next)
nextbutton add.actionlistener(this)
public actionperformed(action event e) 
system.out print.in (next button clicked)
frame.add(next button);
frame set visible true
object {a:one, b:two, c:three, d:four, e:five, f:six, g:seven, h:eight}
keys object keys(team)
entries object entries(obj);
value object= [team color]
covidstringsteamlist4= [green peacemakers,black night riders,orange rna messengers,purple brave hearts,white transit angels,yellow moxie,red protein spikers,magenta magentizers]
<header.html>
phrases
phrases that involve both non-concatenated and concatenated strings 
covid strings phrase list=[non-concatenated  strings "arcturus variant is one part of a long arc in covid history","there may be some new thing next",
"it may be negative or positive","perhaps it may be stronger antibodies" 
"even if its not the case there will be stronger vaccines","hey they can help serve as an umbrella against future variants",
"another part of this long arc involves inequities with healthcare","this includes inequities existing in year one and to today"]
concatenated strings
["fifth harmonys"+"work"+"from"+"home"+"is"+"not"+"the"+"only"+"work"+"from"+"home"+"song","i"+"hear"+"there"+"are"+"some"+"more"
"one"+"of"+"them"+"deals"+"with"+"not"+"giving"+"up","there"+"was"+"after"+"all"+"a"+"lot"+"of"+"madness"+"over"+"the"+"last"+"two"+"years"
"this"+"included"+"but"+"was"+"not"+"limited"+"to"+"the"+"2020"+"ncaa"+"basketball"+"tournament","there"+"was"+"better"+"news"+"at"+"the"+"professional"+"level"
"one"+"of"+"the"+"positive"+"stories"+"on"+"the"+"bubble"+"can"+"be"+"found"+"in"+"the"+"one"+"four"+"four","the"+"basic"+"lesson"+"from"+"the"+"bubble"+"is"+"that"+"there"+"is"+"a"+"way"+"to"+"safely"+"carry"+"out"+"high"+"contact"+"activities"]
string manager{non-concatenated}
insert string(entity,string)
entity.element.text=string
string manager insert string
string manager{concatenated}
insert string (entity,string)
entity.element.text=string
string manager insert string
string=””
for string in covid strings phrase list4 
select characters
edit diffuse property
desired color=green
<header.html>
multiple choice questions
multiple choice questions and answers that will appear in covid strings4
covid strings4multiplechoicelist=[1:a short b medium c shadow in the time before us d long, 2: a homeschooling b work from home c working with your neighbor d work related song,
3: a more b a dozen c a bevy d a cintilla, 4: a some good news b covfefe  c a ray of sunshine d negative, 5: a fatalism b addiction c standing up to power d not giving up,
6: a cabbage patch doll b thing c postmaster general d snl executive producer, 7: a bruhaha b madness c mayhem d balderdash, 
8: a excluding b limited c discounting d marginalizing, 9: a better b worse c same-old-same-old d a blackout, 10 :a year two b year Oone c pre-covid times d the eighties,
11: a inequities b fatigue c retirements d supply issues,12: a learned b found c retrieved d understood,13:a red blood cell  b stronger c t-cell d white blood cell,
14:a moral b warning c idea d lesson, 15: a treatments b natural immunity c resilience d vaccines, 16: a the boogeyman b whoever controls putins russia c emilia hartfords corvette zo6 d weather,
17: a container b umbrella c blockade d blocker,18: a ironic b not surprising c memorable d an affront to covid research,
19: a sixft bnineft c one half meter d fifty yards,20: a yes b no,21: a yes b no c not really]
<header.html>
math problems
covid related math problems that will appear In covid strings4
covidstrings4mathproblemlist= [non-concatenated "if five people used zoom for a discussion on covid and the amount to download the service is seventy nine dollars how much would it cost to download the feature for everyone"?, "if one of the people ended up getting covid and the guidelines for canceling the conference are if three people get infected can the conference continue as planned"?,"if a sudden outbreak caused three more people to get infected along with the one already infected can the conference proceed"?,"if a vaccine came and guidelines were changed to say that a conference can happen if seventy percent of the people are vaccinated could it happen if only fourty percent of people are vaccinated"?,"if a guest speaker were to appear at this conference if they were vaccinated can it still happen"?,"if vaccine requirements were to drop and guidelines were to include a five day self-isolation for anyone testing positive can it still happen"?,
"if a poll found that eighty-seven percent of people oppose this conference given the disorganized nature how many dont"?  
concatenated "if"+"the"+"margin"+"of"+"error"+"is"+"seven and twenty five hundreths"+"percent"+"what"+"is"+"the"+"range"?,"if"+"that"+"same"+"poll"+"found"+"that"+"thirty five percent"+"percent"+"of"+"kids"+"are"+"skeptical"+"of"+"being"+"vaccinated"+"what"+"are"+"the"+"chances"+"of"+"getting"+"to"+"herd"+"immunity"?,"if"+"the"+"heritage"+"foundation"+"decided"+"to"+"challenge"+"the"+"cdcs"+"guildeines"+"on"+"the"+"idea"+"that"+"education"+"is"+"not"+"federal"+"and"+"the"+"seventy-percent"+"rule"+"is"+"unconstituonal"+"would"+"it"+"hold"+"water"?]
string manager{non-concatenated}
insert string(entity,string)
entity.element.text=string
string manager insert string
string manager{concatenated}
insert string (entity,string)
entity.element.text=string
string manager insert string
string=””
for string in covid strings4 math problems list
select characters
edit diffuse property
desired color=green
public static main(string[]args)
int number
number=number*2
system.out print in (“the number is “+number)
<subheading.html>
polling problems
math problems that involve the use of polls
polling function (exact,number)
console log (exact:${exact}, number:${number},
if polling function log== (exact,number)
return true
else:
return false
if polling function log==(number,exact)
return false
else:
return true  
for math problems in covid strings math problem list 
if math problem==x percent:
subtract exact from one hundred
if math problem==margin of error:
add and subtract exact number 
else:
remain constant
<header.html>
sentences
covid related sentences that will appear in covid strings4
covidstrings4sentencelist=["herd"+"immunity"+"will"+"keep"+"kids"+"safe"+"from"+"covid"+"weather","the idea of a covid conference being canceled due to covid is ironic","the"+"debate"+"between"+"threeft"+"versus"+"sixft"+"is"+"a"+"sideshow","the idea of a covid conference being canceled due to covid is ironic"]
string manager{non-concatenated}
insert string(entity,string)
entity.element.text=string
string manager insert string
string manager{concatenated}
insert string (entity,string)
entity.element.text=string
string manager insert string
string=””
for string in covid strings4 sentence list 
select characters
edit diffuse property
desired color=green
string.split   
arrays.aslist(list<string>)
for(string ss:arr)
system.outprintin(ss)
<header.html>
game code part 2
the rest of the game code excluding answer and winner checker
java util.scanner
java.util
questions[]questions=
collections.shuffle(arrays.aslist(questions)
public static main(string [] args)
int number
number=number*2
system.out print in (“the number is“ +number)
<subheading.html>
bonus question
the extra question or questions that appear around the end of the game
question.bonus1=("if the phrase in america were added to the sentence herd immunity will keep kids safe from covid would the meaning change"?)
question.bonus2=("would"+"the"+"meaning"+"of"+"the"+"sentence"+"there"+"is"+"a"+"way"+"to"+"safely"+"carry"+"out"+"high"+"contact"+"activites"+"change"+"if"+"it"+"was"+"substituted"+"with"+"hockey"?)  
for string in covid strings4 bonus question
select characters
edit diffuse property
desired color=green 
private string getblanks(int numberofblanks)
char[] chars = new char[numberofblanks]
arrays.fill chars 
return new string chars 
userin.select team
import meta.
class myclass
constructor (non-concatenated)
return category
if category==math problem:
prompt
log
else:
select from multiple choice
myclass=newmyclass(concatenated) 
return category
if category==math problem:
prompt
log
else:
select from multiple choice
import syntax 
substring(start,end)
<header.html>
answer checker
the feature within covid strings that allows the software to check whether a users answer is correct
for multiple choice questions in covid strings 
if selectedanswer==correct answer:
return true
else:
return false
if selectedanswer==incorrect answer:
return false
else:
return true
for math problems in covid strings
if typed answer==correct
return true
else:
return false
if typed answer==not correct
return false
else
return true
public static main(string []args)
int number
number=number*2
system.out print in (“the number is“ +number)
<subheading.html>
answer scanner
the feature within the covid strings answer checker that allows for confirmation of the user 
answer checker
scanner=new scanner(system.in)
string correct answer
string useranswer=scanner.nextline()
if useranswer.equals(correctanswer)
system.out.print.in(correct)
else:
system.out.printin(incorrect)
scanner.close
<header.html>
winner checker
the feature within covid strings that allows for the player to know if their team won 
check winner:
if winner==true:
log(the winner is)
else:
remain
if winner==false:
log(no winner yet)
else:
log winner
if users team wins covid strings4 
console log users team wins covid strings4 
else
remain
if users team loses covid strings4
return game over
else
remain
return filename
